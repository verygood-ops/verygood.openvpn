---
# from http://www.hashbangcode.com/blog/adding-iptables-rules-ansible
- name: OpenVPN IPTables | Get iptables rules
  shell: iptables -L
  register: iptablesrules
  check_mode: no
  changed_when: false  # Never report as changed

- name: OpenVPN IPTables | Allow VPN forwarding
  shell: /sbin/iptables -A FORWARD -s {{ item }} -j ACCEPT -m comment --comment "Allow VPN forwarding for {{ item }}"
  become: true
  when: iptablesrules.stdout.find("Allow VPN forwarding for {{ item }}") == -1
  with_items: '{{virtual_private_cidrs}}'

- name: OpenVPN IPTables | Allow incoming VPN connection
  shell: /sbin/iptables -A INPUT -p {{openvpn_proto}} --dport {{openvpn_port}} -j ACCEPT -m comment --comment "Allow incoming VPN"
  become: true
  when: iptablesrules.stdout.find("Allow incoming VPN") == -1

- name: OpenVPN IPTables | Accept VPN tunnel adaptor
  shell: /sbin/iptables -A INPUT -i tun0 -j ACCEPT -m comment --comment "Accept VPN tunnel adaptor"
  become: true
  when: iptablesrules.stdout.find("Accept VPN tunnel adaptor") == -1

- name: OpenVPN IPTables | Get iptables nat table rules
  shell: iptables -L -t nat
  register: ipnattablesrules
  check_mode: no
  changed_when: false  # Never report as changed

# If you want to choose what IP address to NAT as, you can uncomment the below
# See: https://community.openvpn.net/openvpn/wiki/NatHack
#- name: OpenVPN IPTables | Perform NAT readdressing
#  shell: /sbin/iptables -t nat -A POSTROUTING -s {{ virtual_private_cidr }} -j SNAT --to-source {{ansible_default_ipv4.address}} -m comment --comment "Perform NAT readdressing"
#  become: true
#  when: ipnattablesrules.stdout.find("Perform NAT readdressing") == -1

- name: OpenVPN IPTables | Perform NAT readdressing
  shell: /sbin/iptables -t nat -A POSTROUTING -s {{ item }} -o eth0 -j MASQUERADE -m comment --comment "Perform NAT readdressing for {{ item }}"
  become: true
  when: ipnattablesrules.stdout.find("Perform NAT readdressing for {{ item }}") == -1
  with_items: '{{ virtual_private_cidrs }}'

- name: OpenVPN IPTables | Persist everything
  command: /etc/init.d/netfilter-persistent save
