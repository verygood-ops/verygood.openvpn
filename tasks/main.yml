---
# tasks file for openvpn

- name: Adding APT key
  shell: "wget -O - {{openvpn_apt_key_url}} | apt-key add -"
  # apt_key:
  #   url: '{{openvpn_apt_key_url}}'

- name: Add APT repo
  apt_repository:
    repo: "deb {{openvpn_apt_repo_url}}{{openvpn_version}} {{ansible_distribution_release}} main"
    update_cache: yes

- name: install openvpn
  apt: name={{ item }} state=present
  with_items:
    - openvpn
    - easy-rsa
    - netfilter-persistent

- name: Ensure group 'nogroup' is present
  group: name=nogroup state=present

- name: Setup 2fa
  include: setup_2fa.yml
  when: openvpn_2fa_google == 'yes'
  tags:
    - client_keys
    - server_keys

- name: create awscli cred directory
  file: path=/root/.aws state=directory mode=0700

- name: install aws credentials
  template: src=credentials.j2 dest=/root/.aws/credentials owner=root group=root
  when: aws_key is defined

  # checking for objects in S3. ignoring errors if objects not exists
- name: check for server keys on S3
  shell: aws s3 ls s3://{{openvpn_backup_bucket}}{{openvpn_backup_server_keys_path}}
  ignore_errors: true
  register: bucket_server_keys

- name: check for clients keys on S3
  shell: aws s3 ls s3://{{openvpn_backup_bucket}}{{openvpn_backup_clients_keys_path}}
  ignore_errors: true
  register: bucket_clients_keys

- name: check for configs on S3
  shell: aws s3 ls s3://{{openvpn_backup_bucket}}{{openvpn_backup_clients_configs_path}}
  ignore_errors: true
  register: bucket_clients_config

- name: Restore keys
  include: restore_keys.yml
  when: not openvpn_force_gen_keys
  tags:
    - server_keys
    - client_keys

- name: Setup server keys
  include: server_keys.yml
  when: not bucket_server_keys.stdout_lines|length > 0 or openvpn_force_gen_keys
  tags:
    - server_keys

- name: setup openvpn auto-start (init-style) & start
  service: name={{openvpn_service_name}} enabled=yes state=stopped

- name: copy openvpn config file
  template: src=server.conf.j2 dest=/etc/openvpn/{{openvpn_config_file}}.conf owner=root group=root
  notify:
    - restart openvpn

- name: enable ipv4 forwarding
  sysctl: name=net.ipv4.ip_forward value=1

- name: Add port rules (iptables)
  include: iptables.yml
  when: openvpn_iptables_enabled == 'yes'

- name: generate client configs
  include: client_keys.yml
  when: openvpn_force_gen_keys or bucket_clients_keys.stdout_lines|length == 0
  tags:
    - client_keys

- name: restart openvpn
  service: name={{openvpn_service_name}} state=restarted
